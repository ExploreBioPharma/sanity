// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`exact length: too long 1`] = `
Array [
  Object {
    "item": [ValidationError: String must be exactly 5 characters long],
    "level": "error",
  },
]
`;

exports[`exact length: too short 1`] = `
Array [
  Object {
    "item": [ValidationError: String must be exactly 5 characters long],
    "level": "error",
  },
]
`;

exports[`exact length: valid 1`] = `Array []`;

exports[`lowercase: all uppercase 1`] = `
Array [
  Object {
    "item": [ValidationError: String must be all lowercase letters],
    "level": "error",
  },
]
`;

exports[`lowercase: locale characters 1`] = `
Array [
  Object {
    "item": [ValidationError: String must be all lowercase letters],
    "level": "error",
  },
]
`;

exports[`lowercase: some uppercase 1`] = `
Array [
  Object {
    "item": [ValidationError: String must be all lowercase letters],
    "level": "error",
  },
]
`;

exports[`lowercase: valid 1`] = `Array []`;

exports[`max length: too long 1`] = `
Array [
  Object {
    "item": [ValidationError: String must be at most 5 characters long],
    "level": "error",
  },
]
`;

exports[`max length: valid 1`] = `Array []`;

exports[`min length: too short 1`] = `
Array [
  Object {
    "item": [ValidationError: String must be at least 2 characters long],
    "level": "error",
  },
]
`;

exports[`min length: valid 1`] = `Array []`;

exports[`regex: inverted match 1`] = `
Array [
  Object {
    "item": [ValidationError: Value should not match "/^[A-Z][a-z]+$/"-pattern],
    "level": "error",
  },
]
`;

exports[`regex: inverted non-match 1`] = `Array []`;

exports[`regex: match 1`] = `Array []`;

exports[`regex: match w/ custom pattern name (opt) 1`] = `Array []`;

exports[`regex: match w/ custom pattern name 1`] = `Array []`;

exports[`regex: non-match 1`] = `
Array [
  Object {
    "item": [ValidationError: Value does not match "/^[A-Z][a-z]+$/"-pattern],
    "level": "error",
  },
]
`;

exports[`regex: non-match w/ custom pattern name (opt) 1`] = `
Array [
  Object {
    "item": [ValidationError: Value does not match PascalCase-pattern],
    "level": "error",
  },
]
`;

exports[`regex: non-match w/ custom pattern name 1`] = `
Array [
  Object {
    "item": [ValidationError: Value does not match PascalCase-pattern],
    "level": "error",
  },
]
`;

exports[`required: empty string 1`] = `
Array [
  Object {
    "item": [ValidationError: This field is required],
    "level": "error",
  },
]
`;

exports[`required: null 1`] = `
Array [
  Object {
    "item": [ValidationError: Expected type "String", got "null"],
    "level": "error",
  },
  Object {
    "item": [ValidationError: This field is required],
    "level": "error",
  },
]
`;

exports[`required: undefined 1`] = `
Array [
  Object {
    "item": [ValidationError: This field is required],
    "level": "error",
  },
]
`;

exports[`required: valid 1`] = `Array []`;

exports[`uppercase: all lowercase 1`] = `
Array [
  Object {
    "item": [ValidationError: String must be all uppercase letters],
    "level": "error",
  },
]
`;

exports[`uppercase: locale characters 1`] = `
Array [
  Object {
    "item": [ValidationError: String must be all uppercase letters],
    "level": "error",
  },
]
`;

exports[`uppercase: some lowercase 1`] = `
Array [
  Object {
    "item": [ValidationError: String must be all uppercase letters],
    "level": "error",
  },
]
`;

exports[`uppercase: some lowercase 2`] = `
Array [
  Object {
    "item": [ValidationError: String must be all uppercase letters],
    "level": "error",
  },
]
`;

exports[`uppercase: valid 1`] = `Array []`;

exports[`url: credentials not specified and not allowed 1`] = `Array []`;

exports[`url: credentials not specified but allowed 1`] = `Array []`;

exports[`url: credentials specified and allowed 1`] = `Array []`;

exports[`url: credentials specified but not allowed 1`] = `
Array [
  Object {
    "item": [ValidationError: String is not a valid URL - username/password not allowed],
    "level": "error",
  },
]
`;

exports[`url: match 1`] = `Array []`;

exports[`url: non-match 1`] = `
Array [
  Object {
    "item": [ValidationError: String is not a valid URL - no protocol defined],
    "level": "error",
  },
]
`;

exports[`url: protocol match 1`] = `Array []`;

exports[`url: protocol non-match 1`] = `
Array [
  Object {
    "item": [ValidationError: String is not a valid URL - protocol "https" not allowed],
    "level": "error",
  },
]
`;

exports[`url: username specified but not allowed 1`] = `
Array [
  Object {
    "item": [ValidationError: String is not a valid URL - username/password not allowed],
    "level": "error",
  },
]
`;
