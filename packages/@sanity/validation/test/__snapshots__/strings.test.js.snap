// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`lowercase: all uppercase 1`] = `
Object {
  "errors": Array [
    [ValidationError: String must be all lowercase letters],
  ],
  "warnings": Array [],
}
`;

exports[`lowercase: locale characters 1`] = `
Object {
  "errors": Array [
    [ValidationError: String must be all lowercase letters],
  ],
  "warnings": Array [],
}
`;

exports[`lowercase: some uppercase 1`] = `
Object {
  "errors": Array [
    [ValidationError: String must be all lowercase letters],
  ],
  "warnings": Array [],
}
`;

exports[`lowercase: valid 1`] = `
Object {
  "errors": Array [],
  "warnings": Array [],
}
`;

exports[`max length: too long 1`] = `
Object {
  "errors": Array [
    [ValidationError: String must be at most 5 characters long],
  ],
  "warnings": Array [],
}
`;

exports[`max length: valid 1`] = `
Object {
  "errors": Array [],
  "warnings": Array [],
}
`;

exports[`min length: too short 1`] = `
Object {
  "errors": Array [
    [ValidationError: String must be at least 2 characters long],
  ],
  "warnings": Array [],
}
`;

exports[`min length: valid 1`] = `
Object {
  "errors": Array [],
  "warnings": Array [],
}
`;

exports[`regex: inverted match 1`] = `
Object {
  "errors": Array [
    [ValidationError: Value should not match "/^[A-Z][a-z]+$/"-pattern],
  ],
  "warnings": Array [],
}
`;

exports[`regex: inverted non-match 1`] = `
Object {
  "errors": Array [],
  "warnings": Array [],
}
`;

exports[`regex: match 1`] = `
Object {
  "errors": Array [],
  "warnings": Array [],
}
`;

exports[`regex: match w/ custom pattern name (opt) 1`] = `
Object {
  "errors": Array [],
  "warnings": Array [],
}
`;

exports[`regex: match w/ custom pattern name 1`] = `
Object {
  "errors": Array [],
  "warnings": Array [],
}
`;

exports[`regex: non-match 1`] = `
Object {
  "errors": Array [
    [ValidationError: Value does not match "/^[A-Z][a-z]+$/"-pattern],
  ],
  "warnings": Array [],
}
`;

exports[`regex: non-match w/ custom pattern name (opt) 1`] = `
Object {
  "errors": Array [
    [ValidationError: Value does not match PascalCase-pattern],
  ],
  "warnings": Array [],
}
`;

exports[`regex: non-match w/ custom pattern name 1`] = `
Object {
  "errors": Array [
    [ValidationError: Value does not match PascalCase-pattern],
  ],
  "warnings": Array [],
}
`;

exports[`required: empty string 1`] = `
Object {
  "errors": Array [
    [ValidationError: This field is required],
  ],
  "warnings": Array [],
}
`;

exports[`required: null 1`] = `
Object {
  "errors": Array [
    [ValidationError: Expected type "String", got "null"],
    [ValidationError: This field is required],
  ],
  "warnings": Array [],
}
`;

exports[`required: undefined 1`] = `
Object {
  "errors": Array [
    [ValidationError: This field is required],
  ],
  "warnings": Array [],
}
`;

exports[`required: valid 1`] = `
Object {
  "errors": Array [],
  "warnings": Array [],
}
`;

exports[`uppercase: all lowercase 1`] = `
Object {
  "errors": Array [
    [ValidationError: String must be all uppercase letters],
  ],
  "warnings": Array [],
}
`;

exports[`uppercase: locale characters 1`] = `
Object {
  "errors": Array [
    [ValidationError: String must be all uppercase letters],
  ],
  "warnings": Array [],
}
`;

exports[`uppercase: some lowercase 1`] = `
Object {
  "errors": Array [
    [ValidationError: String must be all uppercase letters],
  ],
  "warnings": Array [],
}
`;

exports[`uppercase: some lowercase 2`] = `
Object {
  "errors": Array [
    [ValidationError: String must be all uppercase letters],
  ],
  "warnings": Array [],
}
`;

exports[`uppercase: valid 1`] = `
Object {
  "errors": Array [],
  "warnings": Array [],
}
`;
